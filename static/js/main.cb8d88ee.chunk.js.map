{"version":3,"sources":["redux/phonebook/phonebook-actions.js","redux/phonebook/phonebook-reducer.js","redux/auth/auth-selektors.js","services/axiosInstance.js","services/userRequests.js","redux/auth/auth-operations.js","redux/auth/auth-slice.js","services/contactsAPI.js","redux/store.js","components/header/Header.styled.jsx","redux/phonebook/phonebook-selectors.js","components/userMenu/UserMenu.styled.jsx","components/userMenu/UserMenu.js","components/header/Header.js","components/appbar/Appbar.js","components/itemBox/ItemBox.styled.jsx","components/loginForm/LoginForm.styled.jsx","components/utils/validateHooks/ValidateHooks.js","components/loginForm/LoginForm.js","pages/Login.js","pages/PrivateRoute.js","pages/PublicRoute.js","components/signupForm/SignupForm.js","pages/Signup.js","components/contactForm/ContactForm.styled.jsx","components/phoneMaskCustom/PhoneMaskCustom.js","components/contactForm/ContactForm.js","components/contactList/ContactTableHead.js","components/contactList/ContactTableRow.js","components/contactList/ContactTable.js","components/contactList/ContactList.js","components/contactFilter/ContactFilter.styled.jsx","components/contactFilter/ContactFilter.js","pages/UserPage.js","App.js","components/toggleThemeMode/ToggleThemeMode.js","constants/theme.js","index.js"],"names":["changeFilter","createAction","switchTheme","filter","createReducer","actions","_","payload","themeMode","state","getIsLoggedIn","auth","isLoggedIn","getUserEmail","user","email","getUserToken","token","http","axios","create","baseURL","headers","signUp","userData","post","logIn","defaults","common","signUpOperation","createAsyncThunk","a","response","console","log","data","toast","success","error","message","logInOperation","logOutOperation","getCurrentUserOperation","thunkAPI","getState","userToken","get","initialState","name","authSlice","createSlice","extraReducers","authOperations","fulfilled","contactsApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","prepareHeaders","set","tagTypes","endpoints","builder","getContacts","query","url","method","providesTags","result","map","type","id","addContact","mutation","newContact","body","invalidatesTags","deleteContact","contactID","useGetContactsQuery","useAddContactMutation","useDeleteContactMutation","phonebookPersistConfig","key","storage","authPersistConfig","whitelist","store","configureStore","reducer","theme","persistReducer","authReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","devTools","process","persistor","persistStore","Title","styled","Typography","display","alignItems","textTransform","TitleWrapper","div","HeadContainer","Container","marginBottom","boxShadow","MaterialUISwitch","Switch","width","height","padding","margin","transform","color","backgroundImage","encodeURIComponent","opacity","backgroundColor","palette","mode","borderRadius","content","position","left","top","backgroundRepeat","backgroundPosition","getFilter","getThemeMode","UserName","span","primary","main","UserMenu","emailUser","dispatch","useDispatch","LoadingButton","onClick","variant","size","endIcon","sx","ml","Header","useSelector","selectors","authSelectors","userEmail","style","marginLeft","m","onChange","inputProps","checked","Appbar","ItemBox","Box","textAlign","text","secondary","background","card","SignupLoginLink","Link","useValidateEmail","test","useValidatePassword","password","isPasswordEmpty","isPasswordLength","length","initState","LoginForm","useState","formValues","setFormValues","isEmailError","emailErrorText","isPassError","passErrorText","isFormError","setIsFormError","location","useLocation","handleChange","event","target","value","onSubmit","preventDefault","TextField","label","helperText","mb","fullWidth","required","autoComplete","loadingIndicator","to","from","Login","maxWidth","Grid","item","xs","sm","md","PrivateRoute","children","replace","PublicRoute","SignupForm","useValidateName","isNameError","nameErrorText","Signup","FormContacts","form","PhoneMaskCustom","forwardRef","props","ref","other","mask","definitions","inputRef","onAccept","overwrite","number","ContactForm","contacts","contactsError","isLoading","normalizedName","toLowerCase","normalizedNumber","some","contact","isInContacts","duration","inputMode","pattern","title","InputProps","inputComponent","loading","disabled","headCells","ContactTableHead","order","orderBy","onRequestSort","TableHead","TableRow","headCell","TableCell","fontSize","TableSortLabel","active","direction","property","align","ContactTableRow","onDelete","isDeleting","useEffect","hover","role","tabIndex","descendingComparator","b","getComparator","ContactTable","setOrder","setOrderBy","page","setPage","rowsPerPage","setRowsPerPage","pageNum","Math","floor","Paper","TableContainer","Table","minWidth","isAsc","TableBody","sort","slice","TablePagination","rowsPerPageOptions","component","count","onPageChange","newPage","onRowsPerPageChange","parseInt","ContactList","normalizedFilter","filteredContacts","prevContact","nextContact","includes","util","resetApiState","InputLabel","ContactFilter","currentTarget","UserPage","container","spacing","App","path","element","index","ToggleThemeMode","useMemo","createTheme","typography","fontFamily","components","MuiCssBaseline","styleOverrides","ThemeProvider","CssBaseline","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cb8d88ee.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\n\nconst changeFilter = createAction('phonebook/changeFilter');\n\nconst switchTheme = createAction('phonebook/switchTheme');\n\nexport { changeFilter, switchTheme };\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport * as actions from './phonebook-actions';\r\n\r\nexport const filter = createReducer('', {\r\n  [actions.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport const themeMode = createReducer(['light'], {\r\n  [actions.switchTheme]: (state, { payload }) => {\r\n    return [`${payload}`];\r\n  },\r\n});\r\n","export const getIsLoggedIn = state => state.auth.isLoggedIn;\r\nexport const getUserEmail = state => state.auth.user.email;\r\nexport const getUserToken = state => state.auth.token;\r\n","import axios from 'axios';\r\n\r\nconst http = axios.create({\r\n  baseURL: 'https://connections-api.herokuapp.com',\r\n  headers: {\r\n    'Content-type': 'application/json',\r\n  },\r\n});\r\n\r\nexport default http;\r\n","import http from './axiosInstance';\r\n\r\nexport const signUp = userData => {\r\n  return http.post('users/signup', userData);\r\n};\r\n\r\nexport const logIn = userData => {\r\n  return http.post('users/login', userData);\r\n};\r\n\r\nexport const logOut = () => {\r\n  return http.post('users/logout');\r\n};\r\n\r\nexport const getUser = () => {\r\n  return http.get('users/current');\r\n};\r\n","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { signUp, logIn, logOut, getUser } from 'services/userRequests';\r\nimport toast from 'react-hot-toast';\r\nimport http from 'services/axiosInstance';\r\n\r\nconst token = {\r\n  set(token) {\r\n    http.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n  },\r\n\r\n  unset() {\r\n    http.defaults.headers.common['Authorization'] = ``;\r\n  },\r\n};\r\n\r\nexport const signUpOperation = createAsyncThunk(\r\n  'auth/signUpUser',\r\n  async userData => {\r\n    try {\r\n      const response = await signUp(userData);\r\n      console.log('signUpResponse: ', response);\r\n      token.set(response.data.token);\r\n      toast.success(`You are registered!`);\r\n      return response.data;\r\n    } catch (error) {\r\n      toast.error(`${error.response?.data.message}`);\r\n      console.log('signUpError: ', error.response.data.message);\r\n    }\r\n  },\r\n);\r\n\r\nexport const logInOperation = createAsyncThunk(\r\n  'auth/logInUser',\r\n  async userData => {\r\n    try {\r\n      const response = await logIn(userData);\r\n      token.set(response.data.token);\r\n      toast.success(`You are in!`);\r\n      return response.data;\r\n    } catch (error) {\r\n      toast.error(`${error}`);\r\n      console.log('logInError: ', error);\r\n    }\r\n  },\r\n);\r\n\r\nexport const logOutOperation = createAsyncThunk('auth/logOutUser', async () => {\r\n  try {\r\n    const response = await logOut();\r\n    token.unset();\r\n    return response.data;\r\n  } catch (error) {\r\n    console.log('logOutError: ', error);\r\n  }\r\n});\r\n\r\nexport const getCurrentUserOperation = createAsyncThunk(\r\n  'auth/getCurrentUser',\r\n  async (_, thunkAPI) => {\r\n    const state = thunkAPI.getState();\r\n    const userToken = state.auth.token;\r\n    if (!userToken) {\r\n      return;\r\n    }\r\n\r\n    token.set(userToken);\r\n    try {\r\n      const response = await getUser();\r\n      console.log('response: ', response);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.log('getCurrentUserError: ', error);\r\n    }\r\n  },\r\n);\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport { authOperations } from 'redux/auth';\r\n\r\nconst initialState = {\r\n  user: { name: null, email: null },\r\n  token: null,\r\n  isLoggedIn: false,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  extraReducers: {\r\n    [authOperations.signUpOperation.fulfilled]: (state, { payload }) => {\r\n      if (!payload) {\r\n        return;\r\n      }\r\n      return {\r\n        ...state,\r\n        user: payload.user,\r\n        token: payload.token,\r\n        isLoggedIn: true,\r\n      };\r\n    },\r\n\r\n    [authOperations.logInOperation.fulfilled]: (state, { payload }) => {\r\n      if (!payload) {\r\n        return;\r\n      }\r\n      return {\r\n        ...state,\r\n        user: payload.user,\r\n        token: payload.token,\r\n        isLoggedIn: true,\r\n      };\r\n    },\r\n\r\n    [authOperations.logOutOperation.fulfilled]: state => ({\r\n      ...state,\r\n      ...initialState,\r\n    }),\r\n\r\n    [authOperations.getCurrentUserOperation.fulfilled]: (\r\n      state,\r\n      { payload },\r\n    ) => {\r\n      if (!payload) {\r\n        return;\r\n      }\r\n      return {\r\n        ...state,\r\n        user: payload,\r\n        isLoggedIn: true,\r\n      };\r\n    },\r\n  },\r\n});\r\n\r\nexport default authSlice.reducer;\r\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\nexport const contactsApi = createApi({\n  reducerPath: 'contactsApi',\n  baseQuery: fetchBaseQuery({\n    baseUrl: 'https://connections-api.herokuapp.com',\n    prepareHeaders: (headers, { getState }) => {\n      const token = getState().auth.token;\n      if (token) {\n        headers.set('authorization', `Bearer ${token}`);\n      }\n      return headers;\n    },\n  }),\n  tagTypes: ['Contacts'],\n\n  endpoints: builder => ({\n    getContacts: builder.query({\n      query: () => ({\n        url: `/contacts`,\n        method: 'GET',\n      }),\n      providesTags: result =>\n        result\n          ? result.map(({ id }) => ({ type: 'Contacts', id }))\n          : ['Contacts'],\n    }),\n\n    addContact: builder.mutation({\n      query: newContact => ({\n        url: `/contacts`,\n        method: 'POST',\n        body: newContact,\n      }),\n      invalidatesTags: ['Contacts'],\n    }),\n\n    deleteContact: builder.mutation({\n      query: contactID => ({\n        url: `/contacts/${contactID}`,\n        method: 'DELETE',\n      }),\n      invalidatesTags: ['Contacts'],\n    }),\n  }),\n});\n\nexport const {\n  useGetContactsQuery,\n  useAddContactMutation,\n  useDeleteContactMutation,\n} = contactsApi;\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport { filter, themeMode } from './phonebook/phonebook-reducer';\r\nimport { authReducer } from './auth';\r\nimport { contactsApi } from 'services/contactsAPI';\r\n\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nconst phonebookPersistConfig = {\r\n  key: 'themeMode',\r\n  storage: storage,\r\n};\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage: storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    filter,\r\n    theme: persistReducer(phonebookPersistConfig, themeMode),\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n    [contactsApi.reducerPath]: contactsApi.reducer,\r\n  },\r\n\r\n  middleware: getDefaultMiddleware => [\r\n    ...getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }),\r\n    contactsApi.middleware,\r\n  ],\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport { store, persistor };\r\n","import styled from '@emotion/styled';\nimport Container from '@mui/material/Container';\nimport Typography from '@mui/material/Typography';\nimport Switch from '@mui/material/Switch';\n\nexport const Title = styled(Typography)(() => ({\n  display: 'flex',\n  alignItems: 'center',\n  textTransform: 'uppercase',\n}));\n\nexport const TitleWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const HeadContainer = styled(Container)(() => ({\n  display: 'block',\n  marginBottom: '1rem',\n  boxShadow: '0px 8px 15px -10px rgba(34, 60, 80, 0.6)',\n}));\n\nexport const MaterialUISwitch = styled(Switch)(({ theme }) => ({\n  width: 62,\n  height: 34,\n  padding: 7,\n  '& .MuiSwitch-switchBase': {\n    margin: 1,\n    padding: 0,\n    transform: 'translateX(6px)',\n    '&.Mui-checked': {\n      color: '#fff',\n      transform: 'translateX(22px)',\n      '& .MuiSwitch-thumb:before': {\n        backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"20\" viewBox=\"0 0 20 20\"><path fill=\"${encodeURIComponent(\n          '#fff',\n        )}\" d=\"M4.2 2.5l-.7 1.8-1.8.7 1.8.7.7 1.8.6-1.8L6.7 5l-1.9-.7-.6-1.8zm15 8.3a6.7 6.7 0 11-6.6-6.6 5.8 5.8 0 006.6 6.6z\"/></svg>')`,\n      },\n      '& + .MuiSwitch-track': {\n        opacity: 1,\n        backgroundColor: theme.palette.mode === 'dark' ? '#222C2F' : '#aab4be',\n      },\n    },\n  },\n  '& .MuiSwitch-thumb': {\n    backgroundColor: theme.palette.mode === 'dark' ? '#132d57' : '#7a9bbd',\n    width: 32,\n    height: 32,\n    borderRadius: '25%',\n    '&:before': {\n      content: \"''\",\n      position: 'absolute',\n      width: '100%',\n      height: '100%',\n      left: 0,\n      top: 0,\n      backgroundRepeat: 'no-repeat',\n      backgroundPosition: 'center',\n      backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"20\" viewBox=\"0 0 20 20\"><path fill=\"${encodeURIComponent(\n        '#fff',\n      )}\" d=\"M9.305 1.667V3.75h1.389V1.667h-1.39zm-4.707 1.95l-.982.982L5.09 6.072l.982-.982-1.473-1.473zm10.802 0L13.927 5.09l.982.982 1.473-1.473-.982-.982zM10 5.139a4.872 4.872 0 00-4.862 4.86A4.872 4.872 0 0010 14.862 4.872 4.872 0 0014.86 10 4.872 4.872 0 0010 5.139zm0 1.389A3.462 3.462 0 0113.471 10a3.462 3.462 0 01-3.473 3.472A3.462 3.462 0 016.527 10 3.462 3.462 0 0110 6.528zM1.665 9.305v1.39h2.083v-1.39H1.666zm14.583 0v1.39h2.084v-1.39h-2.084zM5.09 13.928L3.616 15.4l.982.982 1.473-1.473-.982-.982zm9.82 0l-.982.982 1.473 1.473.982-.982-1.473-1.473zM9.305 16.25v2.083h1.389V16.25h-1.39z\"/></svg>')`,\n    },\n  },\n  '& .MuiSwitch-track': {\n    opacity: 1,\n    backgroundColor: theme.palette.mode === 'dark' ? '#222C2F' : '#aab4be',\n    borderRadius: 20 / 4,\n  },\n}));\n","export const getFilter = state => state.filter;\r\n\r\nexport const getThemeMode = state => state.theme[0];\r\n","import styled from '@emotion/styled';\r\n\r\nexport const UserName = styled.span`\r\n  text-transform: uppercase;\r\n  color: ${({ theme }) => theme.palette.primary.main};\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n","import React from 'react';\r\nimport LoadingButton from '@mui/lab/LoadingButton';\r\nimport { MdOutlineLogout } from 'react-icons/md';\r\nimport { UserName } from './UserMenu.styled';\r\nimport { useDispatch } from 'react-redux';\r\nimport { authOperations } from 'redux/auth';\r\n\r\nconst UserMenu = ({ emailUser }) => {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <UserName>\r\n      {emailUser}\r\n      <LoadingButton\r\n        type=\"click\"\r\n        onClick={() => dispatch(authOperations.logOutOperation())}\r\n        // loading={isLoading}\r\n        // disabled={isLoading}\r\n        // loadingIndicator=\"Adding...\"\r\n        variant=\"outlined\"\r\n        size=\"small\"\r\n        endIcon={<MdOutlineLogout />}\r\n        sx={{ ml: 2 }}\r\n      >\r\n        Logout\r\n      </LoadingButton>\r\n    </UserName>\r\n  );\r\n};\r\n\r\nexport default UserMenu;\r\n","import {\r\n  HeadContainer,\r\n  Title,\r\n  TitleWrapper,\r\n  MaterialUISwitch,\r\n} from './Header.styled';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { selectors, actions } from 'redux/phonebook';\r\nimport { authSelectors } from 'redux/auth';\r\nimport { MdContactPhone } from 'react-icons/md';\r\nimport UserMenu from 'components/userMenu/UserMenu';\r\n\r\nconst Header = () => {\r\n  const themeMode = useSelector(selectors.getThemeMode);\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  const userEmail = useSelector(authSelectors.getUserEmail);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <HeadContainer>\r\n      <TitleWrapper>\r\n        <Title variant=\"h5\">\r\n          Phonebook\r\n          <MdContactPhone style={{ marginLeft: '10px' }} />\r\n        </Title>\r\n\r\n        {isLoggedIn && <UserMenu emailUser={userEmail} />}\r\n\r\n        <MaterialUISwitch\r\n          sx={{ m: 1 }}\r\n          onChange={() => {\r\n            dispatch(\r\n              actions.switchTheme(themeMode === 'light' ? 'dark' : 'light'),\r\n            );\r\n          }}\r\n          inputProps={{ 'aria-label': 'controlled' }}\r\n          checked={themeMode === 'dark'}\r\n        />\r\n      </TitleWrapper>\r\n    </HeadContainer>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import Header from 'components/header/Header';\r\nimport { Toaster } from 'react-hot-toast';\r\nimport { Outlet } from 'react-router-dom';\r\n\r\nconst Appbar = () => {\r\n  return (\r\n    <>\r\n      <Toaster />\r\n      <Header />\r\n      <Outlet />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Appbar;\r\n","import styled from '@emotion/styled';\r\nimport Box from '@mui/material/Box';\r\n\r\nconst ItemBox = styled(Box)(({ theme }) => {\r\n  // console.log('theme: ', theme);\r\n\r\n  return {\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n    backgroundColor: theme.palette.background.card,\r\n    display: 'block',\r\n    width: '100%',\r\n    padding: '30px',\r\n    marginBottom: '20px',\r\n  };\r\n});\r\n\r\nexport default ItemBox;\r\n","import styled from '@emotion/styled';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const SignupLoginLink = styled(Link)(({ theme }) => {\r\n  //   console.log('theme: ', theme);\r\n\r\n  return {\r\n    marginLeft: '10px',\r\n    color: theme.palette.primary.main,\r\n  };\r\n});\r\n","export const useValidateName = ({ name }) => {\r\n  const isNameEmpty = name !== '';\r\n  const regName = /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/;\r\n\r\n  if (isNameEmpty && !regName.test(name)) {\r\n    return [true, 'Name may contain only letters, apostrophe, dash and spaces'];\r\n  } else {\r\n    return [false, ''];\r\n  }\r\n};\r\n\r\nexport const useValidateEmail = ({ email }) => {\r\n  const isEmailEmpty = email !== '';\r\n  const regEmail = /^([^ ]+@[^ ]+\\.[a-z]{2,6}|)$/;\r\n\r\n  if (isEmailEmpty && !regEmail.test(email)) {\r\n    return [true, 'Invalid email'];\r\n  } else {\r\n    return [false, ''];\r\n  }\r\n};\r\n\r\nexport const useValidatePassword = ({ password }) => {\r\n  const isPasswordEmpty = password !== '';\r\n  const isPasswordLength = password.length < 7;\r\n\r\n  if (isPasswordEmpty && isPasswordLength) {\r\n    return [true, 'Password must contain at least 7 characters'];\r\n  } else {\r\n    return [false, ''];\r\n  }\r\n};\r\n","import { useState } from 'react';\r\nimport TextField from '@mui/material/TextField';\r\nimport LoadingButton from '@mui/lab/LoadingButton';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { SignupLoginLink } from './LoginForm.styled';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { authOperations } from 'redux/auth';\r\n\r\nimport {\r\n  useValidateEmail,\r\n  useValidatePassword,\r\n} from 'components/utils/validateHooks/ValidateHooks';\r\n\r\nconst initState = { email: '', password: '' };\r\n\r\nconst LoginForm = () => {\r\n  const [formValues, setFormValues] = useState(() => initState);\r\n  const [isEmailError, emailErrorText] = useValidateEmail(formValues);\r\n  const [isPassError, passErrorText] = useValidatePassword(formValues);\r\n  const [isFormError, setIsFormError] = useState(false);\r\n  const location = useLocation();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = event => {\r\n    setFormValues({\r\n      ...formValues,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const onSubmit = event => {\r\n    event.preventDefault();\r\n    const { email, password } = formValues;\r\n    if (isEmailError || isPassError) {\r\n      setIsFormError(true);\r\n      return;\r\n    }\r\n    dispatch(authOperations.logInOperation({ email, password }));\r\n    setFormValues(initState);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit}>\r\n        Sign in\r\n        <TextField\r\n          id=\"standard-basic\"\r\n          label=\"Email\"\r\n          name=\"email\"\r\n          type=\"email\"\r\n          value={formValues.email}\r\n          onChange={handleChange}\r\n          variant=\"standard\"\r\n          error={isFormError && isEmailError}\r\n          helperText={isFormError && emailErrorText}\r\n          sx={{ mb: 2 }}\r\n          fullWidth\r\n          required\r\n        />\r\n        <TextField\r\n          id=\"standard-password-input\"\r\n          label=\"Password\"\r\n          name=\"password\"\r\n          type=\"password\"\r\n          value={formValues.password}\r\n          onChange={handleChange}\r\n          autoComplete=\"current-password\"\r\n          variant=\"standard\"\r\n          error={isFormError && isPassError}\r\n          helperText={isFormError && passErrorText}\r\n          sx={{ mb: 2 }}\r\n          fullWidth\r\n          required\r\n        />\r\n        <LoadingButton\r\n          type=\"submit\"\r\n          // loading={isLoading}\r\n          // disabled={isLoading}\r\n          loadingIndicator=\"Adding...\"\r\n          variant=\"outlined\"\r\n        >\r\n          Enter\r\n        </LoadingButton>\r\n      </form>\r\n      <p>\r\n        Don't have an account?\r\n        <SignupLoginLink to=\"/signup\" state={{ from: location }}>\r\n          Create account\r\n        </SignupLoginLink>\r\n      </p>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import Container from '@mui/material/Container';\r\nimport Grid from '@mui/material/Grid';\r\nimport ItemBox from 'components/itemBox/ItemBox.styled';\r\nimport LoginForm from 'components/loginForm/LoginForm';\r\n\r\nconst Login = () => {\r\n  return (\r\n    <Container maxWidth=\"lg\">\r\n      <Grid item xs={12} sm={6} md={6} sx={{ margin: '0 auto' }}>\r\n        <ItemBox>\r\n          <LoginForm />\r\n        </ItemBox>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport { Navigate, useLocation } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { authSelectors } from 'redux/auth';\r\n\r\nconst PrivateRoute = ({ children }) => {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  let location = useLocation();\r\n  return (\r\n    <>\r\n      {isLoggedIn ? (\r\n        children\r\n      ) : (\r\n        <Navigate to=\"/login\" state={{ from: location }} replace />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\n// const PrivateRoute = ({ children }) => {\r\n//   const isLoggedIn = useSelector(selectors.getIsLoggedIn);\r\n//   let location = useLocation();\r\n\r\n//   if (!isLoggedIn) {\r\n//     return <Navigate to=\"/login\" state={{ from: location }} replace />;\r\n//   }\r\n\r\n//   return children;\r\n// };\r\n\r\nexport default PrivateRoute;\r\n","import React from 'react';\r\nimport { Navigate, useLocation } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { authSelectors } from 'redux/auth';\r\n\r\nconst PublicRoute = ({ children }) => {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  let location = useLocation();\r\n\r\n  return (\r\n    <>\r\n      {isLoggedIn ? (\r\n        <Navigate to=\"/user\" state={{ from: location }} replace />\r\n      ) : (\r\n        children\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PublicRoute;\r\n","import { useState } from 'react';\r\nimport TextField from '@mui/material/TextField';\r\nimport LoadingButton from '@mui/lab/LoadingButton';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { SignupLoginLink } from '../loginForm/LoginForm.styled';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { authOperations } from 'redux/auth';\r\n\r\nimport {\r\n  useValidateName,\r\n  useValidateEmail,\r\n  useValidatePassword,\r\n} from 'components/utils/validateHooks/ValidateHooks';\r\n\r\nconst initState = { name: '', email: '', password: '' };\r\n\r\nconst SignupForm = () => {\r\n  const [formValues, setFormValues] = useState(() => initState);\r\n  const [isNameError, nameErrorText] = useValidateName(formValues);\r\n  const [isEmailError, emailErrorText] = useValidateEmail(formValues);\r\n  const [isPassError, passErrorText] = useValidatePassword(formValues);\r\n  const [isFormError, setIsFormError] = useState(false);\r\n  const location = useLocation();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = event => {\r\n    setFormValues({\r\n      ...formValues,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const onSubmit = event => {\r\n    event.preventDefault();\r\n    const { name, email, password } = formValues;\r\n    if (isNameError || isEmailError || isPassError) {\r\n      setIsFormError(true);\r\n      return;\r\n    }\r\n    setIsFormError(false);\r\n    dispatch(authOperations.signUpOperation({ name, email, password }));\r\n    setFormValues(initState);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit}>\r\n        Registration\r\n        <TextField\r\n          id=\"standard-basic\"\r\n          label=\"User name\"\r\n          name=\"name\"\r\n          type=\"text\"\r\n          value={formValues.name}\r\n          onChange={handleChange}\r\n          variant=\"standard\"\r\n          error={isFormError && isNameError}\r\n          helperText={isFormError && nameErrorText}\r\n          sx={{ mb: 2 }}\r\n          fullWidth\r\n          required\r\n        />\r\n        <TextField\r\n          id=\"standard-basic\"\r\n          label=\"Email\"\r\n          name=\"email\"\r\n          type=\"email\"\r\n          value={formValues.email}\r\n          onChange={handleChange}\r\n          variant=\"standard\"\r\n          error={isFormError && isEmailError}\r\n          helperText={isFormError && emailErrorText}\r\n          sx={{ mb: 2 }}\r\n          fullWidth\r\n          required\r\n        />\r\n        <TextField\r\n          id=\"standard-password-input\"\r\n          label=\"Password\"\r\n          name=\"password\"\r\n          type=\"password\"\r\n          value={formValues.password}\r\n          onChange={handleChange}\r\n          autoComplete=\"current-password\"\r\n          variant=\"standard\"\r\n          error={isFormError && isPassError}\r\n          helperText={isFormError && passErrorText}\r\n          sx={{ mb: 2 }}\r\n          fullWidth\r\n          required\r\n        />\r\n        <LoadingButton\r\n          type=\"submit\"\r\n          // loading={isLoading}\r\n          // disabled={isLoading}\r\n          loadingIndicator=\"Adding...\"\r\n          variant=\"outlined\"\r\n        >\r\n          Register\r\n        </LoadingButton>\r\n      </form>\r\n      <p>\r\n        Already have an account?\r\n        <SignupLoginLink to=\"/login\" state={{ from: location }}>\r\n          Sign in\r\n        </SignupLoginLink>\r\n      </p>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignupForm;\r\n","import Container from '@mui/material/Container';\r\nimport Grid from '@mui/material/Grid';\r\nimport ItemBox from 'components/itemBox/ItemBox.styled';\r\nimport SignupForm from 'components/signupForm/SignupForm';\r\n\r\nconst Signup = () => {\r\n  return (\r\n    <Container maxWidth=\"lg\">\r\n      <Grid item xs={12} sm={6} md={6} sx={{ margin: '0 auto' }}>\r\n        <ItemBox>\r\n          <SignupForm />\r\n        </ItemBox>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","import styled from '@emotion/styled';\n\nexport const FormContacts = styled.form`\n  margin-bottom: 20px;\n`;\n","import { forwardRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { IMaskInput } from 'react-imask';\r\n\r\nconst PhoneMaskCustom = forwardRef(function TextMaskCustom(props, ref) {\r\n  const { onChange, ...other } = props;\r\n  return (\r\n    <IMaskInput\r\n      {...other}\r\n      mask=\"+38(###) ###-##-##\"\r\n      definitions={{\r\n        '#': /[0-9]/,\r\n      }}\r\n      inputRef={ref}\r\n      onAccept={value => onChange({ target: { name: props.name, value } })}\r\n      overwrite\r\n    />\r\n  );\r\n});\r\n\r\nPhoneMaskCustom.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default PhoneMaskCustom;\r\n","import { useState } from 'react';\nimport toast from 'react-hot-toast';\nimport {\n  useGetContactsQuery,\n  useAddContactMutation,\n} from 'services/contactsAPI';\n\nimport { FormContacts } from './ContactForm.styled';\n\nimport TextField from '@mui/material/TextField';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport PhoneMaskCustom from 'components/phoneMaskCustom/PhoneMaskCustom';\n\nconst initState = { name: '', number: '' };\n\nconst ContactForm = () => {\n  const [formValues, setFormValues] = useState(() => initState);\n\n  const { data: contacts, error: contactsError } = useGetContactsQuery();\n  const [addContact, { isLoading }] = useAddContactMutation();\n\n  const handleChange = event => {\n    setFormValues({\n      ...formValues,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  const isInContacts = ({ name, number }) => {\n    const normalizedName = name.toLowerCase().replace(/\\s+/g, '');\n    const normalizedNumber = number.replace(/\\D/g, '');\n    return contacts.some(contact => {\n      return (\n        contact.name.toLowerCase().replace(/\\s+/g, '') === normalizedName ||\n        contact.number.replace(/\\D/g, '') === normalizedNumber\n      );\n    });\n  };\n  const onSubmit = event => {\n    event.preventDefault();\n    console.log('formValues: ', formValues);\n\n    if (contactsError) {\n      toast.error(`Server not responding`);\n      return;\n    }\n\n    if (isInContacts(formValues)) {\n      toast.error('This contact already exists', {\n        duration: 5000,\n        position: 'top-center',\n      });\n      return;\n    }\n    const { name, number } = formValues;\n    addContact({ name, number });\n    toast.success(`Contact ${formValues.name} successfully added`);\n    setFormValues(initState);\n  };\n\n  return (\n    <FormContacts onSubmit={onSubmit}>\n      <TextField\n        id=\"standard-basic\"\n        label=\"Name\"\n        name=\"name\"\n        value={formValues.name}\n        onChange={handleChange}\n        inputProps={{\n          inputMode: 'text',\n          pattern: \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\n          title: 'Name may contain only letters, apostrophe, dash and spaces.',\n        }}\n        variant=\"standard\"\n        sx={{ mb: 2 }}\n        fullWidth\n        required\n      />\n      <TextField\n        id=\"standard-basic\"\n        label=\"Phone\"\n        name=\"number\"\n        value={formValues.number}\n        onChange={handleChange}\n        InputProps={{\n          inputMode: 'tel',\n          inputComponent: PhoneMaskCustom,\n        }}\n        variant=\"standard\"\n        sx={{ mb: 2 }}\n        fullWidth\n        required\n      />\n      <LoadingButton\n        type=\"submit\"\n        loading={isLoading}\n        disabled={isLoading}\n        loadingIndicator=\"Adding...\"\n        variant=\"outlined\"\n      >\n        Add contact\n      </LoadingButton>\n    </FormContacts>\n  );\n};\n\nexport default ContactForm;\n","import PropTypes from 'prop-types';\r\n\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableSortLabel from '@mui/material/TableSortLabel';\r\nimport TableCell from '@mui/material/TableCell';\r\n\r\nconst headCells = [\r\n  {\r\n    id: 'name',\r\n    label: 'Name',\r\n  },\r\n  {\r\n    id: 'phone',\r\n    label: 'Phone',\r\n  },\r\n];\r\n\r\nfunction ContactTableHead(props) {\r\n  const { order, orderBy, onRequestSort } = props;\r\n  const createSortHandler = property => event => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead sx={{ backgroundColor: 'background.card' }}>\r\n      <TableRow>\r\n        {headCells.map(headCell => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            sx={{\r\n              fontSize: '1.275rem',\r\n              textAlign: 'center',\r\n              padding: 'normal',\r\n              textTransform: 'uppercase',\r\n              color: 'text.secondary',\r\n            }}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n        <TableCell align={'center'} padding={'normal'}></TableCell>\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nContactTableHead.propTypes = {\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ContactTableHead;\r\n","import { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport LoadingButton from '@mui/lab/LoadingButton';\r\nimport { useDeleteContactMutation } from 'services/contactsAPI';\r\nimport toast from 'react-hot-toast';\r\n\r\nconst ContactTableRow = ({ id, name, number }) => {\r\n  const [onDelete, { data, isLoading: isDeleting }] =\r\n    useDeleteContactMutation();\r\n\r\n  console.log('data: ', data);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      toast.success(`Contact successfully deleted`);\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <TableRow hover role=\"listitem\" tabIndex={-1}>\r\n      <TableCell align=\"center\">{name}</TableCell>\r\n      <TableCell align=\"center\">{number}</TableCell>\r\n      <TableCell align=\"center\">\r\n        <LoadingButton\r\n          onClick={() => onDelete(id)}\r\n          disabled={isDeleting}\r\n          loading={isDeleting}\r\n          loadingIndicator=\"Deleting...\"\r\n          variant=\"outlined\"\r\n        >\r\n          Delete\r\n        </LoadingButton>\r\n      </TableCell>\r\n    </TableRow>\r\n  );\r\n};\r\n\r\nContactTableRow.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ContactTableRow;\r\n","import PropTypes from 'prop-types';\r\nimport { useState, useEffect } from 'react';\r\n\r\nimport Box from '@mui/material/Box';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport Paper from '@mui/material/Paper';\r\nimport ContactTableHead from './ContactTableHead';\r\nimport ContactTableRow from './ContactTableRow';\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nconst ContactTable = ({ contacts }) => {\r\n  const [order, setOrder] = useState('asc');\r\n  const [orderBy, setOrderBy] = useState('');\r\n  const [page, setPage] = useState(0);\r\n  // console.log('page: ', page);\r\n  // console.log('contacts.length: ', contacts.length);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    console.log('property: ', property);\r\n    console.log('order: ', order);\r\n    console.log('orderBy: ', orderBy);\r\n\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    console.log('eventRowsPerPage: ', event);\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (contacts.length <= rowsPerPage && page > 0) {\r\n      setPage(0);\r\n    }\r\n  }, [contacts.length, rowsPerPage, page]);\r\n\r\n  useEffect(() => {\r\n    const pageNum = Math.floor(contacts.length / rowsPerPage);\r\n    if (page > pageNum) {\r\n      console.log('pageInUse: ', page);\r\n      console.log('pageNum: ', pageNum);\r\n      setPage(pageNum);\r\n    }\r\n  }, [contacts.length, page, rowsPerPage]);\r\n\r\n  return (\r\n    <Box sx={{ width: '100%' }}>\r\n      <Paper sx={{ width: '100%', mb: 2 }}>\r\n        <TableContainer>\r\n          <Table\r\n            sx={{ minWidth: 300 }}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={'normal'}\r\n          >\r\n            <ContactTableHead\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onRequestSort={handleRequestSort}\r\n            />\r\n\r\n            <TableBody>\r\n              {contacts\r\n                .sort(getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map(contact => (\r\n                  <ContactTableRow key={contact.id} {...contact} />\r\n                ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={contacts.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={contacts.length <= rowsPerPage ? 0 : page}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </Box>\r\n  );\r\n};\r\n\r\nContactTable.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default ContactTable;\r\n","import { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectors } from 'redux/phonebook';\nimport toast from 'react-hot-toast';\nimport { contactsApi, useGetContactsQuery } from 'services/contactsAPI';\nimport ContactTable from 'components/contactList/ContactTable';\nimport { store } from 'redux/store';\n\nconst ContactList = () => {\n  const filter = useSelector(selectors.getFilter);\n  const { data: contacts, error } = useGetContactsQuery();\n\n  const normalizedFilter = filter.toLowerCase();\n\n  let filteredContacts = [];\n  if (contacts) {\n    const copyContacts = [...contacts];\n\n    filteredContacts = copyContacts\n      .sort((prevContact, nextContact) => nextContact.id - prevContact.id)\n      .filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\n  }\n\n  useEffect(() => {\n    return () => {\n      store.dispatch(contactsApi.util.resetApiState());\n    };\n  }, []);\n\n  useEffect(() => {\n    if (error) {\n      toast.error(`Сan't get contacts info from server`);\n    }\n  }, [error]);\n\n  return (\n    <>{!error && contacts && <ContactTable contacts={filteredContacts} />}</>\n  );\n};\n\nexport default ContactList;\n","import styled from '@emotion/styled';\n\nexport const InputLabel = styled.label`\n  font-size: 1.1rem;\n  font-weight: 500;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { selectors, actions } from 'redux/phonebook';\nimport TextField from '@mui/material/TextField';\n\nimport { InputLabel } from './ContactFilter.styled';\n\nconst ContactFilter = () => {\n  const filter = useSelector(selectors.getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <InputLabel>\n      Filter contacts by name:\n      <TextField\n        id=\"standard-basic\"\n        label=\"Enter name...\"\n        name=\"filter\"\n        value={filter}\n        onChange={event =>\n          dispatch(actions.changeFilter(event.currentTarget.value))\n        }\n        variant=\"standard\"\n        fullWidth\n      />\n    </InputLabel>\n  );\n};\n\nexport default ContactFilter;\n","import Container from '@mui/material/Container';\r\nimport Grid from '@mui/material/Grid';\r\nimport ItemBox from 'components/itemBox/ItemBox.styled';\r\n\r\nimport ContactForm from 'components/contactForm/ContactForm';\r\nimport ContactList from 'components/contactList/ContactList';\r\nimport ContactFilter from 'components/contactFilter/ContactFilter';\r\n\r\nconst UserPage = () => {\r\n  return (\r\n    <Container maxWidth=\"lg\">\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={5} md={4}>\r\n          <ItemBox>\r\n            <ContactForm />\r\n          </ItemBox>\r\n          <ItemBox>\r\n            <ContactFilter />\r\n          </ItemBox>\r\n        </Grid>\r\n        <Grid item xs={12} sm={7} md={8}>\r\n          <ContactList />\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default UserPage;\r\n","import { useEffect } from 'react';\nimport Appbar from 'components/appbar/Appbar';\nimport Login from 'pages/Login';\nimport PrivateRoute from 'pages/PrivateRoute';\nimport PublicRoute from 'pages/PublicRoute';\nimport Signup from 'pages/Signup';\nimport UserPage from 'pages/UserPage';\nimport { Routes, Route, Navigate } from 'react-router-dom';\n\nimport { useDispatch } from 'react-redux';\nimport { authOperations } from 'redux/auth';\n\nconst App = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(authOperations.getCurrentUserOperation());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Routes>\n        <Route path=\"/\" element={<Appbar />}>\n          <Route\n            index\n            element={\n              <PublicRoute>\n                <Login />\n              </PublicRoute>\n            }\n          />\n\n          <Route path=\"react-phonebook\" element={<Navigate to=\"/\" replace />} />\n\n          <Route\n            path=\"login\"\n            element={\n              <PublicRoute>\n                <Login />\n              </PublicRoute>\n            }\n          />\n\n          <Route\n            path=\"signup\"\n            element={\n              <PublicRoute>\n                <Signup />\n              </PublicRoute>\n            }\n          />\n\n          <Route\n            path=\"user\"\n            element={\n              <PrivateRoute>\n                <UserPage />\n              </PrivateRoute>\n            }\n          />\n        </Route>\n      </Routes>\n    </>\n  );\n};\n\nexport default App;\n\n/* <Route path=\"signup\" element={<Signup />} /> */\n","import { useMemo } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectors } from 'redux/phonebook';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\r\nimport { getTheme } from 'constants/theme';\r\n\r\nconst ToggleThemeMode = ({ children }) => {\r\n  const themeMode = useSelector(selectors.getThemeMode);\r\n  const theme = useMemo(() => createTheme(getTheme(themeMode)), [themeMode]);\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      {children}\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default ToggleThemeMode;\r\n","export const getTheme = mode => ({\r\n  typography: {\r\n    fontFamily: 'Kanit',\r\n  },\r\n\r\n  components: {\r\n    MuiCssBaseline: {\r\n      styleOverrides: `\r\n        @font-face {\r\n          font-family: 'Ubuntu';\r\n          font-style: normal;\r\n          font-weight: 400;\r\n          src: url(\"https://fonts.googleapis.com/css2?family=Kanit:wght@200;400;600&display=swap\");\r\n        }\r\n      `,\r\n    },\r\n  },\r\n\r\n  palette: {\r\n    mode,\r\n    ...(mode === 'light'\r\n      ? {\r\n          background: {\r\n            card: '#E3E6F0',\r\n          },\r\n        }\r\n      : {\r\n          background: {\r\n            card: '#222C2F',\r\n          },\r\n        }),\r\n  },\r\n});\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { store, persistor } from 'redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\n// import 'index.css';\nimport App from 'App';\nimport ToggleThemeMode from 'components/toggleThemeMode/ToggleThemeMode';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <ToggleThemeMode>\n            <App />\n          </ToggleThemeMode>\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}