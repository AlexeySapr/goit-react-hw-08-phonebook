{"version":3,"sources":["redux/phonebook/phonebook-actions.js","redux/phonebook/phonebook-reducer.js","services/contactsAPI.js","redux/store.js","components/toggleThemeMode/ToggleThemeMode.js","constants/theme.js","components/section/Section.styled.jsx","components/myApp/Item.js","components/header/Header.styled.jsx","components/header/Header.js","components/contactForm/ContactForm.styled.jsx","components/myApp/PhoneMaskCustom.js","components/contactForm/ContactForm.js","redux/phonebook/phonebook-selectors.js","components/contactList/ContactTableHead.js","components/contactList/ContactTableRow.js","components/contactList/ContactTable.js","components/contactList/ContactList.js","components/contactFilter/ContactFilter.styled.jsx","components/contactFilter/ContactFilter.js","components/myApp/MyApp.js","index.js"],"names":["changeFilter","createAction","filter","createReducer","actions","_","payload","contactsApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","getContacts","query","providesTags","result","map","type","id","addContact","mutation","newContact","url","method","body","invalidatesTags","deleteContact","contactID","useGetContactsQuery","useAddContactMutation","useDeleteContactMutation","store","configureStore","reducer","middleware","getDefaultMiddleware","devTools","process","ColorModeContext","createContext","toggleColorMode","ToggleThemeMode","children","useState","mode","setMode","colorMode","useMemo","prevMode","theme","createTheme","typography","fontFamily","components","MuiCssBaseline","styleOverrides","palette","colors","primary","white","borderColor","textColor","inputBoxShadow","btnLoader","justifyContent","alignIitems","getTheme","Provider","value","ThemeProvider","CssBaseline","styled","div","h2","Item","Box","textAlign","color","text","secondary","backgroundColor","display","width","Title","Typography","alignItems","textTransform","TitleWrapper","HeadContainer","Container","marginBottom","boxShadow","Header","variant","Switch","inputProps","FormContacts","form","label","input","props","button","PhoneMaskCustom","forwardRef","ref","onChange","other","mask","definitions","inputRef","onAccept","target","name","overwrite","initState","phone","ContactForm","formValues","setFormValues","data","error","isLoading","handleChange","event","onSubmit","preventDefault","console","log","TextField","inputMode","pattern","title","sx","mb","fullWidth","required","InputProps","inputComponent","LoadingButton","loading","disabled","loadingIndicator","getFilter","state","headCells","ContactTableHead","order","orderBy","onRequestSort","TableHead","TableRow","headCell","TableCell","align","padding","TableSortLabel","active","direction","onClick","property","ContactTableRow","onDelete","isDeleting","hover","role","tabIndex","descendingComparator","a","b","getComparator","ContactTable","contacts","setOrder","setOrderBy","page","setPage","length","rowsPerPage","setRowsPerPage","useEffect","pageNum","Math","floor","Paper","TableContainer","Table","minWidth","size","isAsc","TableBody","sort","slice","contact","TablePagination","rowsPerPageOptions","component","count","onPageChange","newPage","onRowsPerPageChange","parseInt","ContactList","useSelector","selectors","normalizedFilter","toLowerCase","filteredContacts","includes","toast","InputLabel","FormInput","ContactFilter","dispatch","useDispatch","currentTarget","MyApp","maxWidth","Grid","container","spacing","item","xs","sm","md","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d124c5e1.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\nconst changeFilter = createAction('phonebook/changeFilter');\n\nexport { changeFilter };\n","import { createReducer } from '@reduxjs/toolkit';\nimport * as actions from './phonebook-actions';\n\nexport const filter = createReducer('', {\n  [actions.changeFilter]: (_, { payload }) => payload,\n});\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\nexport const contactsApi = createApi({\n  reducerPath: 'contactsApi',\n  baseQuery: fetchBaseQuery({\n    baseUrl: 'https://61dd6565f60e8f0017668798.mockapi.io',\n  }),\n  tagTypes: ['Contacts'],\n  endpoints: builder => ({\n    getContacts: builder.query({\n      query: () => '/contacts',\n      providesTags: result =>\n        result\n          ? result.map(({ id }) => ({ type: 'Contacts', id }))\n          : ['Contacts'],\n    }),\n    addContact: builder.mutation({\n      query: newContact => ({\n        url: `/contacts`,\n        method: 'POST',\n        body: newContact,\n      }),\n      invalidatesTags: ['Contacts'],\n    }),\n    deleteContact: builder.mutation({\n      query: contactID => ({\n        url: `/contacts/${contactID}`,\n        method: 'DELETE',\n      }),\n      invalidatesTags: ['Contacts'],\n    }),\n  }),\n});\n\nexport const {\n  useGetContactsQuery,\n  useAddContactMutation,\n  useDeleteContactMutation,\n} = contactsApi;\n","import { configureStore } from '@reduxjs/toolkit';\nimport { filter } from './phonebook/phonebook-reducer';\nimport { contactsApi } from 'services/contactsAPI';\n\nexport const store = configureStore({\n  reducer: {\n    filter,\n    [contactsApi.reducerPath]: contactsApi.reducer,\n  },\n  middleware: getDefaultMiddleware => [\n    ...getDefaultMiddleware(),\n    contactsApi.middleware,\n  ],\n  devTools: process.env.NODE_ENV === 'development',\n});\n","import { createContext, useState, useMemo } from 'react';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\r\n// import Switch from '@mui/material/Switch';\r\nimport { getTheme } from 'constants/theme';\r\n\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\n\r\nconst ColorModeContext = createContext({ toggleColorMode: () => {} });\r\n\r\nconst ToggleThemeMode = ({ children }) => {\r\n  const [mode, setMode] = useState('light');\r\n\r\n  const colorMode = useMemo(\r\n    () => ({\r\n      toggleColorMode: () => {\r\n        setMode(prevMode => (prevMode === 'light' ? 'dark' : 'light'));\r\n      },\r\n    }),\r\n    [],\r\n  );\r\n\r\n  const theme = useMemo(() => createTheme(getTheme(mode)), [mode]);\r\n\r\n  return (\r\n    <ColorModeContext.Provider value={colorMode}>\r\n      <ThemeProvider theme={theme}>\r\n        <CssBaseline />\r\n        {/* <Switch\r\n          onChange={colorMode.toggleColorMode}\r\n          inputProps={{ 'aria-label': 'controlled' }}\r\n        /> */}\r\n        {children}\r\n      </ThemeProvider>\r\n    </ColorModeContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ToggleThemeMode;\r\n","export const getTheme = mode => ({\r\n  typography: {\r\n    fontFamily: 'Kanit',\r\n  },\r\n\r\n  components: {\r\n    MuiCssBaseline: {\r\n      styleOverrides: `\r\n        @font-face {\r\n          font-family: 'Ubuntu';\r\n          font-style: normal;\r\n          font-weight: 400;\r\n          src: url(\"https://fonts.googleapis.com/css2?family=Kanit:wght@200;400;600&display=swap\");\r\n        }\r\n      `,\r\n    },\r\n  },\r\n\r\n  palette: {\r\n    mode,\r\n  },\r\n\r\n  colors: {\r\n    primary: '#57d0e6',\r\n    white: '#fff',\r\n    borderColor: '#bdbdbd',\r\n    textColor: '#212529',\r\n    inputBoxShadow: '0 0 0 0.2rem rgba(87, 208, 230, 0.5)',\r\n  },\r\n\r\n  btnLoader: {\r\n    justifyContent: 'center',\r\n    alignIitems: 'center',\r\n  },\r\n});\r\n","import styled from '@emotion/styled';\n\nexport const Box = styled.div`\n  margin-top: 15px;\n  margin-bottom: 15px;\n`;\n\nexport const Title = styled.h2`\n  font-weight: 500;\n  text-transform: uppercase;\n`;\n","import styled from '@emotion/styled';\r\nimport Box from '@mui/material/Box';\r\n\r\nconst Item = styled(Box)(({ theme }) => ({\r\n  textAlign: 'center',\r\n  color: theme.palette.text.secondary,\r\n  backgroundColor: '#cfe8fc',\r\n  display: 'block',\r\n  width: '100%',\r\n}));\r\n\r\nexport default Item;\r\n","import styled from '@emotion/styled';\nimport Container from '@mui/material/Container';\nimport Typography from '@mui/material/Typography';\n\nexport const Title = styled(Typography)(() => ({\n  display: 'flex',\n  alignItems: 'center',\n  textTransform: 'uppercase',\n}));\n\nexport const TitleWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const HeadContainer = styled(Container)(() => ({\n  display: 'block',\n  marginBottom: '1rem',\n  boxShadow: '0px 8px 15px -10px rgba(34, 60, 80, 0.6)',\n}));\n","import { HeadContainer, Title, TitleWrapper } from './Header.styled';\nimport Switch from '@mui/material/Switch';\n\nimport { FcContacts } from 'react-icons/fc';\n\nconst Header = () => {\n  return (\n    <HeadContainer>\n      <TitleWrapper>\n        <Title variant=\"h5\">\n          Phonebook\n          <FcContacts />\n        </Title>\n\n        <Switch\n          // onChange={colorMode.toggleColorMode}\n          inputProps={{ 'aria-label': 'controlled' }}\n        />\n      </TitleWrapper>\n    </HeadContainer>\n  );\n};\n\nexport default Header;\n","import styled from '@emotion/styled';\n\nexport const FormContacts = styled.form`\n  padding: 30px;\n  background-color: rgba(247, 230, 230, 50%);\n`;\n\nexport const InputLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  font-weight: 500;\n  font-size: 1.5rem;\n  margin-bottom: 20px;\n`;\n\nexport const FormInput = styled.input`\n  width: 300px;\n  margin-top: 5px;\n\n  padding: 0.375rem 0.75rem;\n  font-family: inherit;\n  font-size: 1rem;\n  font-weight: 400;\n  line-height: 1.5;\n  color: ${props => props.theme.colors.textColor};\n  border: ${props => `1px solid ${props.theme.colors.borderColor}`};\n  border-radius: 0.25rem;\n  transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n\n  &:focus {\n    border-color: ${props => props.theme.colors.primary};\n    outline: 0;\n    box-shadow: ${props => props.theme.colors.inputBoxShadow};\n  }\n`;\n\nexport const FormButton = styled.button`\n  background-color: transparent;\n  padding: 5px 10px;\n  border-radius: 5px;\n  width: 120px;\n  font-size: 1rem;\n  transition: background-color 300ms ease-in-out, color 300ms ease-in-out;\n\n  &:hover,\n  &:focus {\n    color: ${props => props.theme.colors.white};\n    outline: 0;\n    cursor: pointer;\n    background-color: ${props => props.theme.colors.primary};\n  }\n`;\n","import { forwardRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { IMaskInput } from 'react-imask';\r\n\r\nconst PhoneMaskCustom = forwardRef(function TextMaskCustom(props, ref) {\r\n  const { onChange, ...other } = props;\r\n  return (\r\n    <IMaskInput\r\n      {...other}\r\n      mask=\"+38(###) ###-##-##\"\r\n      definitions={{\r\n        '#': /[0-9]/,\r\n      }}\r\n      inputRef={ref}\r\n      onAccept={value => onChange({ target: { name: props.name, value } })}\r\n      overwrite\r\n    />\r\n  );\r\n});\r\n\r\nPhoneMaskCustom.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default PhoneMaskCustom;\r\n","import { useState } from 'react';\nimport toast, { Toaster } from 'react-hot-toast';\nimport {\n  useGetContactsQuery,\n  useAddContactMutation,\n} from 'services/contactsAPI';\n\nimport { FormContacts, FormButton } from './ContactForm.styled';\n\nimport TextField from '@mui/material/TextField';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport PhoneMaskCustom from 'components/myApp/PhoneMaskCustom';\n\nconst initState = { name: '', phone: '' };\n\nconst ContactForm = () => {\n  const [formValues, setFormValues] = useState(() => initState);\n\n  const { data: contacts, error: contactsError } = useGetContactsQuery();\n  const [addContact, { isLoading }] = useAddContactMutation();\n\n  const handleChange = event => {\n    setFormValues({\n      ...formValues,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  const isInContacts = ({ name, number }) => {\n    const normalizedName = name.toLowerCase().replace(/\\s+/g, '');\n    const normalizedNumber = number.replace(/\\D/g, '');\n    return contacts.some(contact => {\n      return (\n        contact.name.toLowerCase().replace(/\\s+/g, '') === normalizedName ||\n        contact.phone.replace(/\\D/g, '') === normalizedNumber\n      );\n    });\n  };\n  const onSubmit = event => {\n    event.preventDefault();\n\n    console.log('formValues: ', formValues);\n\n    // if (contactsError) {\n    //   toast.error(`Server not responding`);\n    //   return;\n    // }\n\n    // if (isInContacts({ name, number })) {\n    //   toast.error('This contact already exists', {\n    //     duration: 3000,\n    //     position: 'top-center',\n    //   });\n    //   return;\n    // }\n\n    addContact(formValues);\n    // toast.success(`Contact ${name} successfully added`);\n    // ressetForm();\n    setFormValues(initState);\n  };\n\n  return (\n    <>\n      <Toaster />\n      <FormContacts onSubmit={onSubmit}>\n        <TextField\n          id=\"standard-basic\"\n          label=\"Name\"\n          name=\"name\"\n          value={formValues.name}\n          onChange={handleChange}\n          inputProps={{\n            inputMode: 'text',\n            pattern:\n              \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\n            title:\n              'Name may contain only letters, apostrophe, dash and spaces.',\n          }}\n          variant=\"standard\"\n          sx={{ mb: 2 }}\n          fullWidth\n          required\n        />\n        <TextField\n          id=\"standard-basic\"\n          label=\"Phone\"\n          name=\"phone\"\n          value={formValues.phone}\n          onChange={handleChange}\n          InputProps={{\n            inputMode: 'tel',\n            inputComponent: PhoneMaskCustom,\n          }}\n          variant=\"standard\"\n          sx={{ mb: 2 }}\n          fullWidth\n          required\n        />\n        <LoadingButton\n          type=\"submit\"\n          loading={isLoading}\n          disabled={isLoading}\n          loadingIndicator=\"Adding...\"\n          variant=\"outlined\"\n        >\n          Add contact\n        </LoadingButton>\n      </FormContacts>\n    </>\n  );\n};\n\nexport default ContactForm;\n","export const getFilter = state => state.filter;\n","import PropTypes from 'prop-types';\r\n\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableSortLabel from '@mui/material/TableSortLabel';\r\nimport TableCell from '@mui/material/TableCell';\r\n\r\nconst headCells = [\r\n  {\r\n    id: 'name',\r\n    label: 'Name',\r\n  },\r\n  {\r\n    id: 'phone',\r\n    label: 'Phone',\r\n  },\r\n];\r\n\r\nfunction ContactTableHead(props) {\r\n  const { order, orderBy, onRequestSort } = props;\r\n  const createSortHandler = property => event => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {headCells.map(headCell => (\r\n          <TableCell key={headCell.id} align={'center'} padding={'normal'}>\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n        <TableCell align={'center'} padding={'normal'}></TableCell>\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nContactTableHead.propTypes = {\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ContactTableHead;\r\n","import PropTypes from 'prop-types';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport LoadingButton from '@mui/lab/LoadingButton';\r\nimport { useDeleteContactMutation } from 'services/contactsAPI';\r\n\r\nconst ContactTableRow = ({ id, name, phone }) => {\r\n  const [onDelete, { isLoading: isDeleting }] = useDeleteContactMutation();\r\n\r\n  return (\r\n    <TableRow hover role=\"listitem\" tabIndex={-1}>\r\n      <TableCell align=\"center\">{name}</TableCell>\r\n      <TableCell align=\"center\">{phone}</TableCell>\r\n      <TableCell align=\"center\">\r\n        <LoadingButton\r\n          onClick={() => onDelete(id)}\r\n          disabled={isDeleting}\r\n          loading={isDeleting}\r\n          loadingIndicator=\"Deleting...\"\r\n          variant=\"outlined\"\r\n        >\r\n          Delete\r\n        </LoadingButton>\r\n      </TableCell>\r\n    </TableRow>\r\n  );\r\n};\r\n\r\nContactTableRow.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  phone: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ContactTableRow;\r\n","import PropTypes from 'prop-types';\r\nimport { useState, useEffect } from 'react';\r\n\r\nimport Box from '@mui/material/Box';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport Paper from '@mui/material/Paper';\r\nimport ContactTableHead from './ContactTableHead';\r\nimport ContactTableRow from './ContactTableRow';\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction getCurrentPage() {\r\n  return 3;\r\n}\r\n\r\nconst ContactTable = ({ contacts }) => {\r\n  const [order, setOrder] = useState('asc');\r\n  const [orderBy, setOrderBy] = useState('');\r\n  const [page, setPage] = useState(0);\r\n  console.log('page: ', page);\r\n  console.log('contacts.length: ', contacts.length);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    console.log('property: ', property);\r\n    console.log('order: ', order);\r\n    console.log('orderBy: ', orderBy);\r\n\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    console.log('event: ', event);\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    console.log('eventRowsPerPage: ', event);\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (contacts.length <= rowsPerPage && page > 0) {\r\n      setPage(0);\r\n    }\r\n  }, [contacts.length, rowsPerPage, page]);\r\n\r\n  useEffect(() => {\r\n    const pageNum = Math.floor(contacts.length / rowsPerPage);\r\n    if (page > pageNum) {\r\n      console.log('pageInUse: ', page);\r\n      console.log('pageNum: ', pageNum);\r\n      setPage(pageNum);\r\n    }\r\n  }, [contacts.length, page, rowsPerPage]);\r\n\r\n  return (\r\n    <Box sx={{ width: '100%' }}>\r\n      <Paper sx={{ width: '100%', mb: 2 }}>\r\n        <TableContainer>\r\n          <Table\r\n            sx={{ minWidth: 300 }}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={'normal'}\r\n          >\r\n            <ContactTableHead\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onRequestSort={handleRequestSort}\r\n            />\r\n\r\n            <TableBody>\r\n              {contacts\r\n                .sort(getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map(contact => (\r\n                  <ContactTableRow key={contact.id} {...contact} />\r\n                ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={contacts.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={contacts.length <= rowsPerPage ? 0 : page}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </Box>\r\n  );\r\n};\r\n\r\nContactTable.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default ContactTable;\r\n","import { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { selectors } from 'redux/phonebook';\nimport { useGetContactsQuery } from 'services/contactsAPI';\n\nimport ContactTable from 'components/contactList/ContactTable';\n\nconst ContactList = () => {\n  const filter = useSelector(selectors.getFilter);\n  const { data: contacts, error } = useGetContactsQuery();\n\n  const normalizedFilter = filter.toLowerCase();\n\n  let filteredContacts = [];\n  if (contacts) {\n    filteredContacts = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  }\n\n  useEffect(() => {\n    if (error) {\n      toast.error(`Сan't get contacts info from server`);\n    }\n  }, [error]);\n\n  return (\n    <>\n      {error && <Toaster />}\n      {!error && contacts && <ContactTable contacts={filteredContacts} />}\n    </>\n  );\n};\n\nexport default ContactList;\n","import styled from '@emotion/styled';\n\nexport const InputLabel = styled.label`\n  font-size: 1.1rem;\n  font-weight: 500;\n`;\n\nexport const FormInput = styled.input`\n  margin-left: 20px;\n\n  padding: 0.2rem 0.4rem;\n  color: ${props => props.theme.colors.textColor};\n  border: ${props => `1px solid ${props.theme.colors.borderColor}`};\n  border-radius: 0.25rem;\n  transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n\n  &:focus {\n    border-color: ${props => props.theme.colors.primary};\n    outline: 0;\n    box-shadow: ${props => props.theme.colors.inputBoxShadow};\n  }\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { selectors, actions } from 'redux/phonebook';\nimport { InputLabel, FormInput } from './ContactFilter.styled';\n\nconst ContactFilter = () => {\n  const filter = useSelector(selectors.getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <InputLabel>\n      Find contacts by name:\n      <FormInput\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={event =>\n          dispatch(actions.changeFilter(event.currentTarget.value))\n        }\n      ></FormInput>\n    </InputLabel>\n  );\n};\n\nexport default ContactFilter;\n","// import Container from 'components/container/Container';\r\nimport Section from 'components/section/Section';\r\nimport Item from './Item';\r\nimport Container from '@mui/material/Container';\r\nimport Grid from '@mui/material/Grid';\r\nimport Header from 'components/header/Header';\r\nimport ContactForm from 'components/contactForm/ContactForm';\r\nimport ContactList from 'components/contactList/ContactList';\r\nimport ContactFilter from 'components/contactFilter/ContactFilter';\r\n\r\nconst MyApp = () => {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Container maxWidth=\"lg\">\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} sm={5} md={4}>\r\n            <Item>\r\n              <ContactForm />\r\n              <ContactFilter />\r\n            </Item>\r\n          </Grid>\r\n          <Grid item xs={12} sm={7} md={8}>\r\n            <Item>\r\n              <ContactList />\r\n            </Item>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MyApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport { store } from 'redux/store';\n// import 'index.css';\n// import App from 'App';\nimport ToggleThemeMode from 'components/toggleThemeMode/ToggleThemeMode';\nimport MyApp from 'components/myApp/MyApp';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ToggleThemeMode>\n        {/* <App /> */}\n        <MyApp />\n      </ToggleThemeMode>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}