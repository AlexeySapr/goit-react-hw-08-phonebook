{"version":3,"sources":["redux/phonebook/phonebook-actions.js","redux/phonebook/phonebook-reducer.js","services/contactsAPI.js","redux/store.js","constants/theme.js","components/container/Container.styled.jsx","components/container/Container.js","components/section/Section.styled.jsx","components/section/Section.js","components/contactForm/ContactForm.styled.jsx","components/contactForm/ContactForm.js","redux/phonebook/phonebook-selectors.js","components/contactListItem/ContactListItem.styled.jsx","components/contactListItem/ContactListItem.js","components/contactList/ContactList.styled.jsx","components/contactList/ContactList.js","components/contactFilter/ContactFilter.styled.jsx","components/contactFilter/ContactFilter.js","components/header/Header.styled.jsx","components/header/Header.js","App.js","index.js"],"names":["changeFilter","createAction","filter","createReducer","actions","_","payload","contactsApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","getContacts","query","providesTags","result","map","type","id","addContact","mutation","newContact","url","method","body","invalidatesTags","deleteContact","contactID","useGetContactsQuery","useAddContactMutation","useDeleteContactMutation","store","configureStore","reducer","middleware","getDefaultMiddleware","devTools","process","theme","Object","freeze","colors","primary","white","borderColor","textColor","inputBoxShadow","loader","justifyContent","marginTop","btnLoader","alignIitems","Box","styled","div","Container","children","Title","h2","Section","title","FormContacts","form","props","InputLabel","label","FormInput","input","FormButton","button","ContactForm","useState","name","setName","number","setNumber","contacts","data","contactsError","error","isLoading","handleNameChange","event","currentTarget","value","onSubmit","preventDefault","toast","normalizedName","toLowerCase","replace","normalizedNumber","some","contact","phone","isInContacts","success","duration","position","onChange","pattern","required","disabled","getFilter","state","ListItem","li","Text","p","ItemBtn","ContactListItem","useTheme","onDelete","isDeleting","onClick","ariaLabel","color","wrapperStyle","height","width","List","ul","ContactList","useSelector","selectors","normalizedFilter","filteredContacts","includes","useEffect","ContactFilter","dispatch","useDispatch","Header","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4WACMA,EAAeC,YAAa,0BCErBC,EAASC,YAAc,GAAD,eAChCC,GAAuB,SAACC,EAAD,YAAMC,Y,eCFnBC,EAAcC,YAAU,CACnCC,YAAa,cACbC,UAAWC,YAAe,CACxBC,QAAS,gDAEXC,SAAU,CAAC,YACXC,UAAW,SAAAC,GAAO,MAAK,CACrBC,YAAaD,EAAQE,MAAM,CACzBA,MAAO,iBAAM,aACbC,aAAc,SAAAC,GAAM,OAClBA,EACIA,EAAOC,KAAI,kBAAa,CAAEC,KAAM,WAAYC,GAAjC,EAAGA,OACd,CAAC,eAETC,WAAYR,EAAQS,SAAS,CAC3BP,MAAO,SAAAQ,GAAU,MAAK,CACpBC,IAAI,YACJC,OAAQ,OACRC,KAAMH,IAERI,gBAAiB,CAAC,cAEpBC,cAAef,EAAQS,SAAS,CAC9BP,MAAO,SAAAc,GAAS,MAAK,CACnBL,IAAI,aAAD,OAAeK,GAClBJ,OAAQ,WAEVE,gBAAiB,CAAC,kBAMtBG,EAGEzB,EAHFyB,oBACAC,EAEE1B,EAFF0B,sBACAC,EACE3B,EADF2B,yBCjCWC,EAAQC,YAAe,CAClCC,QAAQ,aACNnC,UACCK,EAAYE,YAAcF,EAAY8B,SAEzCC,WAAY,SAAAC,GAAoB,4BAC3BA,KAD2B,CAE9BhC,EAAY+B,cAEdE,UAAUC,I,QCbCC,EAAQC,OAAOC,OAAO,CACjCC,OAAQ,CACNC,QAAS,UACTC,MAAO,OACPC,YAAa,UACbC,UAAW,UACXC,eAAgB,wCAGlBC,OAAQ,CACNC,eAAgB,SAChBC,UAAW,QAGbC,UAAW,CACTF,eAAgB,SAChBG,YAAa,Y,4BCdJC,EAAMC,IAAOC,IAAV,iH,OCSDC,EARG,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACnB,OAAO,cAACJ,EAAD,UAAMI,KCFFJ,EAAMC,IAAOC,IAAV,yEAKHG,EAAQJ,IAAOK,GAAV,+ECUHC,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOJ,EAAe,EAAfA,SACxB,OACE,eAAC,EAAD,WACE,cAACC,EAAD,UAAQG,IACPJ,M,gBCLMK,EAAeR,IAAOS,KAAV,+EACb,SAAAC,GAAK,0BAAiBA,EAAMzB,MAAMG,OAAOC,YAKxCsB,EAAaX,IAAOY,MAAV,4IAQVC,EAAYb,IAAOc,MAAV,kZASX,SAAAJ,GAAK,OAAIA,EAAMzB,MAAMG,OAAOI,aAC3B,SAAAkB,GAAK,0BAAiBA,EAAMzB,MAAMG,OAAOG,gBAKjC,SAAAmB,GAAK,OAAIA,EAAMzB,MAAMG,OAAOC,WAE9B,SAAAqB,GAAK,OAAIA,EAAMzB,MAAMG,OAAOK,kBAIjCsB,EAAaf,IAAOgB,OAAV,gVAUV,SAAAN,GAAK,OAAIA,EAAMzB,MAAMG,OAAOE,SAGjB,SAAAoB,GAAK,OAAIA,EAAMzB,MAAMG,OAAOC,WC0DrC4B,EA9FK,WAClB,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAEA,EAAiD/C,IAAnCgD,EAAd,EAAQC,KAAuBC,EAA/B,EAAwBC,MACxB,EAAoClD,IAApC,mBAAOV,EAAP,KAAqB6D,EAArB,KAAqBA,UAEfC,EAAmB,SAAAC,GACvB,MAAwBA,EAAMC,cAAtBX,EAAR,EAAQA,KAAMY,EAAd,EAAcA,MAEd,OAAQZ,GACN,IAAK,OACHC,EAAQW,GACR,MAEF,IAAK,SACHT,EAAUS,KA4ChB,OACE,eAACvB,EAAD,CAAcwB,SAtBC,SAAAH,GACfA,EAAMI,iBAEFR,EACFS,IAAMR,MAAN,0BAdiB,SAAC,GAAsB,IAApBP,EAAmB,EAAnBA,KAAME,EAAa,EAAbA,OACtBc,EAAiBhB,EAAKiB,cAAcC,QAAQ,OAAQ,IACpDC,EAAmBjB,EAAOgB,QAAQ,MAAO,IAC/C,OAAOd,EAASgB,MAAK,SAAAC,GACnB,OACEA,EAAQrB,KAAKiB,cAAcC,QAAQ,OAAQ,MAAQF,GACnDK,EAAQC,MAAMJ,QAAQ,MAAO,MAAQC,KAYrCI,CAAa,CAAEvB,OAAME,YAQzBvD,EAAW,CAAEqD,OAAMsB,MAAOpB,IAC1Ba,IAAMS,QAAN,kBAAyBxB,EAAzB,wBA/BAC,EAAQ,IACRE,EAAU,KAsBRY,IAAMR,MAAM,8BAA+B,CACzCkB,SAAU,IACVC,SAAU,gBAWd,UACE,eAAClC,EAAD,kBAEE,cAACE,EAAD,CACEjD,KAAK,OACLuD,KAAK,OACLY,MAAOZ,EACP2B,SAAUlB,EACVmB,QAAQ,yHACRxC,MAAM,yIACNyC,UAAQ,OAGZ,cAAC,IAAD,IACA,eAACrC,EAAD,oBAEE,cAACE,EAAD,CACEjD,KAAK,MACLuD,KAAK,SACLY,MAAOV,EACPyB,SAAUlB,EACVmB,QAAQ,yFACRxC,MAAM,+FACNyC,UAAQ,OAGZ,cAACjC,EAAD,CAAYnD,KAAK,SAASqF,SAAUtB,EAApC,SACGA,EAAY,YAAc,oB,QCtGtBuB,GAAY,SAAAC,GAAK,OAAIA,EAAM1G,Q,SCE3B2G,GAAWpD,IAAOqD,GAAV,gIAIF,SAAA3C,GAAK,0BAAiBA,EAAMzB,MAAMG,OAAOC,YAG/CiE,GAAOtD,IAAOuD,EAAV,kDAIJC,GAAUxD,IAAOgB,OAAV,iVAUP,SAAAN,GAAK,OAAIA,EAAMzB,MAAMG,OAAOE,SAGjB,SAAAoB,GAAK,OAAIA,EAAMzB,MAAMG,OAAOC,WCpBvCoE,GAAkB,SAAC,GAAyB,IAAvB5F,EAAsB,EAAtBA,GAAIsD,EAAkB,EAAlBA,KAAMsB,EAAY,EAAZA,MACpCxD,EAAQyE,cACd,EAA8CjF,IAA9C,mBAAOkF,EAAP,KAA8BC,EAA9B,KAAmBjC,UAEnB,OACE,eAACyB,GAAD,WACE,eAACE,GAAD,WACGnC,EADH,KACWsB,KAEX,cAACe,GAAD,CAAS5F,KAAK,SAASiG,QAAS,kBAAMF,EAAS9F,IAAKoF,SAAUW,EAA9D,SACGA,EACC,cAAC,KAAD,CACEE,UAAU,oBACVC,MAAK,UAAK9E,EAAMG,OAAOE,OACvB0E,aAAc/E,EAAMY,UACpBoE,OAAQ,GACRC,MAAO,KAGT,eCvBGC,GAAOnE,IAAOoE,GAAV,4DCwCFC,GAjCK,WAClB,IAAM5H,EAAS6H,YAAYC,EAAUrB,WACrC,EAAkC3E,IAApBgD,EAAd,EAAQC,KAAgBE,EAAxB,EAAwBA,MAElB8C,EAAmB/H,EAAO2F,cAE5BqC,EAAmB,GAavB,OAZIlD,IACFkD,EAAmBlD,EAAS9E,QAAO,SAAA+F,GAAO,OACxCA,EAAQrB,KAAKiB,cAAcsC,SAASF,OAIxCG,qBAAU,WACJjD,GACFQ,IAAMR,MAAN,8CAED,CAACA,IAGF,qCACGA,GAAS,cAAC,IAAD,KACRA,GAASH,GACT,cAAC4C,GAAD,UACGM,EAAiB9G,KAAI,SAAA6E,GAAO,OAC3B,cAAC,GAAD,eAAsCA,GAAhBA,EAAQ3E,aChC7B8C,GAAaX,IAAOY,MAAV,uEAKVC,GAAYb,IAAOc,MAAV,ySAIX,SAAAJ,GAAK,OAAIA,EAAMzB,MAAMG,OAAOI,aAC3B,SAAAkB,GAAK,0BAAiBA,EAAMzB,MAAMG,OAAOG,gBAKjC,SAAAmB,GAAK,OAAIA,EAAMzB,MAAMG,OAAOC,WAE9B,SAAAqB,GAAK,OAAIA,EAAMzB,MAAMG,OAAOK,kBCI/BmF,GAnBO,WACpB,IAAMnI,EAAS6H,YAAYC,EAAUrB,WAC/B2B,EAAWC,cAEjB,OACE,eAAC,GAAD,oCAEE,cAAC,GAAD,CACElH,KAAK,OACLuD,KAAK,SACLY,MAAOtF,EACPqG,SAAU,SAAAjB,GAAK,OACbgD,EAASlI,EAAQJ,aAAasF,EAAMC,cAAcC,eCd/C3B,GAAQJ,IAAOK,GAAV,6EAEI,SAAAK,GAAK,OAAIA,EAAMzB,MAAMG,OAAOC,WCanC0F,GAdA,SAAC,GAAyB,IAAvBxE,EAAsB,EAAtBA,MAAOJ,EAAe,EAAfA,SACvB,OACE,qCACE,cAAC,GAAD,UAAQI,IACPJ,MCkBQ6E,GAjBH,WACV,OACE,cAAC,GAAD,CAAQzE,MAAM,YAAd,SACE,eAAC,EAAD,WACE,cAAC,EAAD,CAASA,MAAO,YAAhB,SACE,cAAC,EAAD,MAGF,eAAC,EAAD,CAASA,MAAO,WAAhB,UACE,cAAC,GAAD,IACA,cAAC,GAAD,aCNV0E,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUzG,MAAOA,EAAjB,SACE,cAAC,IAAD,CAAeO,MAAOA,EAAtB,SACE,cAAC,GAAD,UAINmG,SAASC,eAAe,W","file":"static/js/main.58d7c2a9.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\nconst changeFilter = createAction('phonebook/changeFilter');\n\nexport { changeFilter };\n","import { createReducer } from '@reduxjs/toolkit';\nimport * as actions from './phonebook-actions';\n\nexport const filter = createReducer('', {\n  [actions.changeFilter]: (_, { payload }) => payload,\n});\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\nexport const contactsApi = createApi({\n  reducerPath: 'contactsApi',\n  baseQuery: fetchBaseQuery({\n    baseUrl: 'https://61dd6565f60e8f0017668798.mockapi.io',\n  }),\n  tagTypes: ['Contacts'],\n  endpoints: builder => ({\n    getContacts: builder.query({\n      query: () => '/contacts',\n      providesTags: result =>\n        result\n          ? result.map(({ id }) => ({ type: 'Contacts', id }))\n          : ['Contacts'],\n    }),\n    addContact: builder.mutation({\n      query: newContact => ({\n        url: `/contacts`,\n        method: 'POST',\n        body: newContact,\n      }),\n      invalidatesTags: ['Contacts'],\n    }),\n    deleteContact: builder.mutation({\n      query: contactID => ({\n        url: `/contacts/${contactID}`,\n        method: 'DELETE',\n      }),\n      invalidatesTags: ['Contacts'],\n    }),\n  }),\n});\n\nexport const {\n  useGetContactsQuery,\n  useAddContactMutation,\n  useDeleteContactMutation,\n} = contactsApi;\n","import { configureStore } from '@reduxjs/toolkit';\nimport { filter } from './phonebook/phonebook-reducer';\nimport { contactsApi } from 'services/contactsAPI';\n\nexport const store = configureStore({\n  reducer: {\n    filter,\n    [contactsApi.reducerPath]: contactsApi.reducer,\n  },\n  middleware: getDefaultMiddleware => [\n    ...getDefaultMiddleware(),\n    contactsApi.middleware,\n  ],\n  devTools: process.env.NODE_ENV === 'development',\n});\n","export const theme = Object.freeze({\n  colors: {\n    primary: '#57d0e6',\n    white: '#fff',\n    borderColor: '#bdbdbd',\n    textColor: '#212529',\n    inputBoxShadow: '0 0 0 0.2rem rgba(87, 208, 230, 0.5)',\n  },\n\n  loader: {\n    justifyContent: 'center',\n    marginTop: '2rem',\n  },\n\n  btnLoader: {\n    justifyContent: 'center',\n    alignIitems: 'center',\n  },\n});\n","import styled from '@emotion/styled';\n\nexport const Box = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 1170px;\n  padding: 15px;\n`;\n","import PropTypes from 'prop-types';\nimport { Box } from './Container.styled';\n\nconst Container = ({ children }) => {\n  return <Box>{children}</Box>;\n};\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Container;\n","import styled from '@emotion/styled';\n\nexport const Box = styled.div`\n  margin-top: 15px;\n  margin-bottom: 15px;\n`;\n\nexport const Title = styled.h2`\n  font-weight: 500;\n  text-transform: uppercase;\n`;\n","import PropTypes from 'prop-types';\nimport { Box, Title } from './Section.styled';\n\nconst Section = ({ title, children }) => {\n  return (\n    <Box>\n      <Title>{title}</Title>\n      {children}\n    </Box>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import styled from '@emotion/styled';\n\nexport const FormContacts = styled.form`\n  border: ${props => `2px solid ${props.theme.colors.primary}`};\n  padding: 30px;\n  width: 500px;\n`;\n\nexport const InputLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  font-weight: 500;\n  font-size: 1.5rem;\n  margin-bottom: 20px;\n`;\n\nexport const FormInput = styled.input`\n  width: 300px;\n  margin-top: 5px;\n\n  padding: 0.375rem 0.75rem;\n  font-family: inherit;\n  font-size: 1rem;\n  font-weight: 400;\n  line-height: 1.5;\n  color: ${props => props.theme.colors.textColor};\n  border: ${props => `1px solid ${props.theme.colors.borderColor}`};\n  border-radius: 0.25rem;\n  transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n\n  &:focus {\n    border-color: ${props => props.theme.colors.primary};\n    outline: 0;\n    box-shadow: ${props => props.theme.colors.inputBoxShadow};\n  }\n`;\n\nexport const FormButton = styled.button`\n  background-color: transparent;\n  padding: 5px 10px;\n  border-radius: 5px;\n  width: 120px;\n  font-size: 1rem;\n  transition: background-color 300ms ease-in-out, color 300ms ease-in-out;\n\n  &:hover,\n  &:focus {\n    color: ${props => props.theme.colors.white};\n    outline: 0;\n    cursor: pointer;\n    background-color: ${props => props.theme.colors.primary};\n  }\n`;\n","import { useState } from 'react';\nimport toast, { Toaster } from 'react-hot-toast';\nimport {\n  useGetContactsQuery,\n  useAddContactMutation,\n} from 'services/contactsAPI';\n\nimport {\n  FormContacts,\n  InputLabel,\n  FormInput,\n  FormButton,\n} from './ContactForm.styled';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const { data: contacts, error: contactsError } = useGetContactsQuery();\n  const [addContact, { isLoading }] = useAddContactMutation();\n\n  const handleNameChange = event => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const ressetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const isInContacts = ({ name, number }) => {\n    const normalizedName = name.toLowerCase().replace(/\\s+/g, '');\n    const normalizedNumber = number.replace(/\\D/g, '');\n    return contacts.some(contact => {\n      return (\n        contact.name.toLowerCase().replace(/\\s+/g, '') === normalizedName ||\n        contact.phone.replace(/\\D/g, '') === normalizedNumber\n      );\n    });\n  };\n  const onSubmit = event => {\n    event.preventDefault();\n\n    if (contactsError) {\n      toast.error(`Server not responding`);\n      return;\n    }\n\n    if (isInContacts({ name, number })) {\n      toast.error('This contact already exists', {\n        duration: 3000,\n        position: 'top-center',\n      });\n      return;\n    }\n\n    addContact({ name, phone: number });\n    toast.success(`Contact ${name} successfully added`);\n    ressetForm();\n  };\n\n  return (\n    <FormContacts onSubmit={onSubmit}>\n      <InputLabel>\n        Name\n        <FormInput\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleNameChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </InputLabel>\n      <Toaster />\n      <InputLabel>\n        Number\n        <FormInput\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleNameChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </InputLabel>\n      <FormButton type=\"submit\" disabled={isLoading}>\n        {isLoading ? 'Adding...' : 'Add contact'}\n      </FormButton>\n    </FormContacts>\n  );\n};\n\nexport default ContactForm;\n","export const getFilter = state => state.filter;\n","import styled from '@emotion/styled';\n\nexport const ListItem = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border-bottom: ${props => `1px solid ${props.theme.colors.primary}`};\n`;\n\nexport const Text = styled.p`\n  font-size: 1.1rem;\n`;\n\nexport const ItemBtn = styled.button`\n  background-color: transparent;\n  padding: 5px 10px;\n  border-radius: 5px;\n  width: 75px;\n  font-size: 0.8rem;\n  transition: background-color 300ms ease-in-out, color 300ms ease-in-out;\n\n  &:hover,\n  &:focus {\n    color: ${props => props.theme.colors.white};\n    outline: 0;\n    cursor: pointer;\n    background-color: ${props => props.theme.colors.primary};\n  }\n`;\n","import { Circles } from 'react-loader-spinner';\nimport { useTheme } from '@emotion/react';\nimport { useDeleteContactMutation } from 'services/contactsAPI';\n\nimport { ListItem, Text, ItemBtn } from './ContactListItem.styled';\n\nexport const ContactListItem = ({ id, name, phone }) => {\n  const theme = useTheme();\n  const [onDelete, { isLoading: isDeleting }] = useDeleteContactMutation();\n\n  return (\n    <ListItem>\n      <Text>\n        {name}: {phone}\n      </Text>\n      <ItemBtn type=\"button\" onClick={() => onDelete(id)} disabled={isDeleting}>\n        {isDeleting ? (\n          <Circles\n            ariaLabel=\"loading-indicator\"\n            color={`${theme.colors.white}`}\n            wrapperStyle={theme.btnLoader}\n            height={20}\n            width={20}\n          />\n        ) : (\n          'Delete'\n        )}\n      </ItemBtn>\n    </ListItem>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  padding: 0;\n  width: 380px;\n`;\n","import { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { selectors } from 'redux/phonebook';\nimport { useGetContactsQuery } from 'services/contactsAPI';\n\nimport { ContactListItem } from '../contactListItem/ContactListItem';\nimport { List } from './ContactList.styled';\n\nconst ContactList = () => {\n  const filter = useSelector(selectors.getFilter);\n  const { data: contacts, error } = useGetContactsQuery();\n\n  const normalizedFilter = filter.toLowerCase();\n\n  let filteredContacts = [];\n  if (contacts) {\n    filteredContacts = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  }\n\n  useEffect(() => {\n    if (error) {\n      toast.error(`Сan't get contacts info from server`);\n    }\n  }, [error]);\n\n  return (\n    <>\n      {error && <Toaster />}\n      {!error && contacts && (\n        <List>\n          {filteredContacts.map(contact => (\n            <ContactListItem key={contact.id} {...contact} />\n          ))}\n        </List>\n      )}\n    </>\n  );\n};\n\nexport default ContactList;\n","import styled from '@emotion/styled';\n\nexport const InputLabel = styled.label`\n  font-size: 1.1rem;\n  font-weight: 500;\n`;\n\nexport const FormInput = styled.input`\n  margin-left: 20px;\n\n  padding: 0.2rem 0.4rem;\n  color: ${props => props.theme.colors.textColor};\n  border: ${props => `1px solid ${props.theme.colors.borderColor}`};\n  border-radius: 0.25rem;\n  transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n\n  &:focus {\n    border-color: ${props => props.theme.colors.primary};\n    outline: 0;\n    box-shadow: ${props => props.theme.colors.inputBoxShadow};\n  }\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { selectors, actions } from 'redux/phonebook';\nimport { InputLabel, FormInput } from './ContactFilter.styled';\n\nconst ContactFilter = () => {\n  const filter = useSelector(selectors.getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <InputLabel>\n      Find contacts by name:\n      <FormInput\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={event =>\n          dispatch(actions.changeFilter(event.currentTarget.value))\n        }\n      ></FormInput>\n    </InputLabel>\n  );\n};\n\nexport default ContactFilter;\n","import styled from '@emotion/styled';\n\nexport const Title = styled.h2`\n  text-align: center;\n  background-color: ${props => props.theme.colors.primary};\n`;\n","import PropTypes from 'prop-types';\nimport { Title } from './Header.styled';\n\nconst Header = ({ title, children }) => {\n  return (\n    <>\n      <Title>{title}</Title>\n      {children}\n    </>\n  );\n};\n\nHeader.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Header;\n","import Container from 'components/container/Container';\nimport Section from 'components/section/Section';\nimport ContactForm from 'components/contactForm/ContactForm';\nimport ContactList from 'components/contactList/ContactList';\n// import initData from 'tempData/data.json';\nimport ContactFilter from 'components/contactFilter/ContactFilter';\nimport Header from 'components/header/Header';\n\nconst App = () => {\n  return (\n    <Header title=\"Phonebook\">\n      <Container>\n        <Section title={'Phonebook'}>\n          <ContactForm />\n        </Section>\n\n        <Section title={'Contacts'}>\n          <ContactFilter />\n          <ContactList />\n        </Section>\n      </Container>\n    </Header>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport { store } from 'redux/store';\n\nimport { ThemeProvider } from '@emotion/react';\nimport { theme } from 'constants/theme';\nimport 'index.css';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport App from 'App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}